curl -X POST http://localhost:3333/api/runs
   -H 'Content-Type: application/json'
   -d '{"login":"my_login","password":"my_password"}'

sudo -u postgres psql # linux
psql postgres         # macos

DROP DATABASE tskmgr;
CREATE DATABASE tskmgr;
GRANT ALL PRIVILEGES ON DATABASE tskmgr TO tskmgr;

DROP DATABASE tskmgr_dev;
CREATE DATABASE tskmgr_dev;
GRANT ALL PRIVILEGES ON DATABASE tskmgr_dev TO tskmgr;

\l
\c tskmgr

DROP SCHEMA public CASCADE;
CREATE SCHEMA public;

GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO public;

drop table task cascade;
drop table run cascade;
drop table file cascade;
drop table migrations cascade;

# WSL2
sudo service postgresql start

Usage: curl -vv -F file=@dump_2022-08-06.gz http://localhost:3333/api/runs/1/files

docker rm tskmgr_api_1 tskmgr_frontend_1 tskmgr_migrations_1 tskmgr_postgres_1 --force

# https://docs.docker.com/build/building/multi-platform/
docker buildx create --name mybuilder --driver docker-container --bootstrap --use
docker buildx build --push --platform linux/amd64,linux/arm64 -f apps/api/Dockerfile -t mathpaquette/tskmgr-api:latest .
docker buildx build --push --platform linux/amd64,linux/arm64 -f apps/frontend/Dockerfile -t mathpaquette/tskmgr-frontend:latest .
docker buildx build --push --platform linux/amd64,linux/arm64 -f libs/db/Dockerfile -t mathpaquette/tskmgr-migrations:latest .

docker-compose -f docker-compose.build.yml build
docker-compose -f docker-compose.yml up
